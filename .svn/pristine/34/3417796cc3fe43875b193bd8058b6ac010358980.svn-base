describe('workordertests', function () {
	
	var clock;
	
	beforeEach(function() {
		clock = sinon.useFakeTimers(new Date(2015,9,1).getTime());
	});
	
	afterEach(function() {
		clock.restore();
	});
	
	it('canary should pass', function() {
		expect(true).to.be.eql(true);
	});
	
	it('store locally data, localStorage currently has nothing', function() {
		var data = {name:'test'};
		var localStorage = {};
		storeLocally(data, localStorage);
		
		expect({workOrder0:{name:'test'}, workOrderCount:0}).to.be.eql(localStorage);
	});
	
	it('store locally data, localStorage currently has a value', function() {
		var data = {name:'test1'};
		var localStorage = {workOrder0:{name:'test'}, workOrderCount:0};
		storeLocally(data, localStorage);
		
		expect({workOrder0:{name:'test'},workOrder1:{name:'test1'}, workOrderCount:1}).to.be.eql(localStorage);
	});
	
	it('test if setCurrentDate sets date to the value', function() {
		var dataTag = {value:''}
		setCurrentDate(dataTag);
		expect({value:'2015-10-01'}).to.be.eql(dataTag);
	});
	
});