describe('locationtests', function() {
	
	it('canary should pass', function() {
		expect(true).to.be.eql(true);
	});
	
    it('disable the button', function(){
        var button = {disabled: false};
        disableButtonAndDisplayMessage(button, {});
        expect(button.disabled).to.be.eql(true);
    });

    it('display locating message', function(){
        var displayMessage = {innerHTML: ''};
        disableButtonAndDisplayMessage({}, displayMessage);
        expect(displayMessage.innerHTML).to.be.eql('Locating...');
    });

    it('permission denied error from callback error', function(){
        var error = {code: 1};
        var displayMessage = {innerHTML: ''};
        callAnotherLocationInfoError(error, displayMessage);
        expect(displayMessage.innerHTML).to.be.eql('Cannot track your location Permission denied');
    });

    it('position unavailable error from callback error', function(){
        var error = {code: 2};
        var displayMessage = {innerHTML: ''};
        callAnotherLocationInfoError(error, displayMessage);
        expect(displayMessage.innerHTML).to.be.eql('Cannot track your location Position unavailable');
    });

    it('timeout error from callback error', function(){
        var error = {code: 3};
        var displayMessage = {innerHTML: ''};
        callAnotherLocationInfoError(error, displayMessage);
        expect(displayMessage.innerHTML).to.be.eql('Cannot track your location timeout');
    });

    it('response received for position for hidden field', function(){
        var position = {coords: {latitude: 29.721188099999996, longitude: -95.3422602, altitude:null}};
        var elementToUpdate = {value: ''};

        callAnotherLocationInfo(position, {}, elementToUpdate, {});

        var expected = 29.721188099999996 + ", " + -95.3422602 + ", " + null;
        expect(elementToUpdate.value).to.be.eql(expected);
    });

    it('display message response received for position', function(){
        var position = {coords: {latitude: 29.721188099999996, longitude: -95.3422602, altitude:null}};
        var trackingInfo = {innerHTML: ''};

        callAnotherLocationInfo(position, trackingInfo, {}, {});

        var expected = "Your Location: " + 29.721188099999996 + ", " + -95.3422602 + ", " + null;
        expect(trackingInfo.innerHTML).to.be.eql(expected);
    });

    it('enable button when the response received', function(){
        var button = {disabled: true};
        var position = {coords: {latitude: 29.721188099999996, longitude: -95.3422602, altitude:null}};

        callAnotherLocationInfo(position, {}, {}, button);
        expect(button.disabled).to.be.eql(false);
    });

    it('check whether service is called', function(){
        var navigation = false;
        var navigator = {
            geolocation: {
                getCurrentPosition: function () {
                    navigation = true;
                }
            }
        }
        getGeoLocation(navigator, {}, {}, {});

        expect(navigation).to.be.eql(true);
    });

    it('check whether success function in getgeolocation is called', function(){
        var navigation = false;
        var position = {coords: {latitude: 29.721188099999996, longitude: -95.3422602, altitude:null}};
        var navigator = {
            geolocation: {
                getCurrentPosition: function (locationinfo, locationErrorInfo) {
                    locationinfo(position);
                }
            }
        }

        var trackingInfo = {innerHTML: ''};
        var expected = "Your Location: " + 29.721188099999996 + ", " + -95.3422602+ ", " + null;
        getGeoLocation(navigator, {}, trackingInfo, {});

        expect(trackingInfo.innerHTML).to.be.eql(expected);

    });

    it('check whether error function in getgeolocation is called', function(){
        var navigation = false;
        var position = {coords: {latitude: 29.721188099999996, longitude: -95.3422602}};
        var navigator = {
            geolocation: {
                getCurrentPosition: function (locationinfo, locationErrorInfo) {
                    locationErrorInfo(error, displayMessage);
                }
            }
        }

        var error = {code: 3};
        var displayMessage = {innerHTML: ''};
        getGeoLocation(navigator, {}, displayMessage, {});
        expect(displayMessage.innerHTML).to.be.eql('Cannot track your location timeout');
    });
});